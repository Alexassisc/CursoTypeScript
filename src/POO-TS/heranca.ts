// Classe base (pai)
class Animal {
  // Propriedade protegida (protected) para que filhas possam acessar
  protected nome: string;

  // Constructor inicializa o nome do animal
  constructor(nome: string) {
    this.nome = nome;
  }

  // M√©todo p√∫blico que todos os animais podem usar
  public dormir(): void {
    console.log(`${this.nome} est√° dormindo...`);
  }
}

// Classe filha que herda de Animal
class Cachorro extends Animal {
  // Constructor da classe filha
  constructor(
    nome: string,
    public raca: string,
  ) {
    super(nome); // chama o constructor da classe pai
  }

  // M√©todo espec√≠fico do cachorro
  public latir(): void {
    console.log(`${this.nome} (${this.raca}) est√° latindo! üê∂`);
  }
}

// Classe filha que herda de Animal
class Gato extends Animal {
  constructor(nome: string) {
    super(nome); // chama o constructor da classe pai
  }

  // M√©todo espec√≠fico do gato
  public miar(): void {
    console.log(`${this.nome} est√° miando! üê±`);
  }
}

// Criando objetos
const dog = new Cachorro('Rex', 'Labrador');
const cat = new Gato('Mimi');

// Chamando m√©todos da classe pai e filha
dog.dormir(); // Rex est√° dormindo...
dog.latir(); // Rex (Labrador) est√° latindo! üê∂

cat.dormir(); // Mimi est√° dormindo...
cat.miar(); // Mimi est√° miando! üê±
